<h1 class="doc-page-title">Adding layers</h1>

<p>
  A map is only interesting with layers to represent some information. The most obvious
  layer you will probably want is the tile layer. In fact it is so obvious that we tend
  to forget it is a layer like any other.
</p>

<p>
  Ember-leaflet provides the <code>\{{tile-layer}}</code> component that enables you
  to create tile layers. This is raster data, so you'll need a tile layer server
  that provides them for you.
  <a href="http://wiki.openstreetmap.org/wiki/Tiles#Servers" target="_blank">
  Here are some free tile layer servers you can use.</a> Let's use some cool tiles
  from CartoDB and see how it looks.
</p>

{{#code-sample as |component|}}
  {{#code-block language="handlebars" class=(concat "code-sample-snippet " (if (eq component.activeTab "template") "active"))}}
\{{#leaflet-map lat=lat lng=lng zoom=zoom}}
  \{{tile-layer url="http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png"}}
\{{/leaflet-map}}{{/code-block}}
  {{#code-block language="javascript" class=(concat "code-sample-snippet " (if (eq component.activeTab "javascript") "active"))}}
export default Ember.Controller.extend({
  lat: 45.519743,
  lng: -122.680522,
  zoom: 10
});{{/code-block}}
  <div class="code-sample-snippet result {{if (eq component.activeTab "result") "active"}}">
    {{#leaflet-map lat=lat lng=lng zoom=zoom}}
      {{tile-layer url="http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png"}}
    {{/leaflet-map}}
  </div>
{{/code-sample}}

<p>
  Neat. We have tiles, can move the map around and have the default leaflet controls.
  Not bad for three lines of code. Let's now try to add some markers in it.
</p>

{{#code-sample as |component|}}
  {{#code-block language="handlebars" class=(concat "code-sample-snippet " (if (eq component.activeTab "template") "active"))}}
\{{#leaflet-map lat=lat lng=lng zoom=zoom}}

  \{{tile-layer url="http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png"}}

  \{{#marker-layer location=emberConfLocation}}
    &lt;h3&gt;The Oregon Convention Center&lt;/h3&gt;
    777 NE Martin Luther King Jr Blvd&lt;br&gt;
    Portland, OR 97232
  \{{/marker-layer}}

  \{{#marker-layer location=hotel}}
    &lt;h3&gt;Hotel&lt;/h3&gt;
  \{{/marker-layer}}

\{{/leaflet-map}}{{/code-block}}
  {{#code-block language="javascript" class=(concat "code-sample-snippet " (if (eq component.activeTab "javascript") "active"))}}
export default Ember.Controller.extend({
  lat: 45.519743,
  lng: -122.680522,
  zoom: 10,
  emberConfLocation: [45.528298, -122.662986],
  hotel: [45.530891, -122.655504]
});{{/code-block}}
  <div class="code-sample-snippet result {{if (eq component.activeTab "result") "active"}}">
    {{#leaflet-map lat=lat lng=lng zoom=zoom}}
      {{tile-layer url="http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png"}}
      {{#marker-layer location=emberConfLocation popupOpen=false}}
        <h3>The Oregon Convention Center</h3>
        777 NE Martin Luther King Jr Blvd<br>
        Portland, OR 97232
      {{/marker-layer}}
      {{#marker-layer location=hotel}}
        <h3>Hotel</h3>
      {{/marker-layer}}
    {{/leaflet-map}}
  </div>
{{/code-sample}}


<p>
  Did you notice that you can specify coordinates two different ways? Instead of using <code>lat</code> and <code>lng</code>,
  you can alternatively use <code>[lat, lng]</code>. When setting the <code>location</code> or <code>locations</code> property,
  you can either use key value pairs (<code>{lat: xxxx, lng: xxx}</code>) or arrays <code>[lat,lng]</code>.
</p>

<p>
  Want to add a popup to your map? We used <code>\{{marker-layer}}</code>'s block to specify our popup text.
  Go ahead and click the markers. It feels Ember and it feels natural.
  Why not a form in a popup? A component? Why not <code>\{{outlet}}</code>? Possibilities
  are endless.
</p>

<p>
  In order to customize your popup, you can pass a hash of <code>popupOptions</code> values, include custom class names.
  The full list of options is available on the <a href="http://leafletjs.com/reference.html#popup">Leaflet.js website.</a>
</p>

<div class="doc-page-nav">
  {{#link-to "docs.container" class="doc-page-nav-link-prev"}}&lt; The container{{/link-to}}
  {{#link-to "docs.actions" class="doc-page-nav-link-next"}}Actions &gt;{{/link-to}}
</div>
